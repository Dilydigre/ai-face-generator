version: "3"
networks:
  ai_docker_network:
    driver: gateway
    ipam:
      config:
        - subnet: 10.10.0.0/16
          gateway: 10.10.0.1

services: # declare running dockers 
  # reverse proxy
  nginx:  
    image: nginx:latest
    container_name: nginx_rev_proxy
    restart: always 
    ports:
      - 80:80 # for http support
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf # location of nginx conf file
    network_mode: host 

  # flask website
  website:
    image: ghcr.io/dilydigre/website:main # get latest image from github registry
    container_name: website
    restart: always 
    pull_policy: always # always pull image to ensure to get latest version
    environment: # pass environment variable to container to ensure the website to find the API container
      - AI_CONTAINER_IP=${AI_CONTAINER_IP}
    expose:
      - 5000
    networks:
      ai_docker_network:  # network for backend
          ipv4_address: ${WEBSITE_CONTAINER_IP} # force container IP, can be setup in .env file
  # AI model / API container
  ai_model:
    image: ghcr.io/dilydigre/ai:main # get latest image from github registry
    container_name: ai_model
    restart: always
    pull_policy: always  always pull image to ensure to get latest version
    expose:
      - 5000
    networks:
      ai_docker_network: # network for backend
        ipv4_address: ${AI_CONTAINER_IP} # force container IP, can be setup in .env file

